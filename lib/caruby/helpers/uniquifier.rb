# A test utility class to generate id qualifiers.
module CaRuby
  class Uniquifier
    # Returns a relatively unique integral qualifier. Successive calls to this method
    # within the same time zone spaced more than a millisecond apart return different
    # integers. Each generated qualifier is greater than the previous by an unspecified
    # amount.
    def self.qualifier
      # the first date that this method could be called
      @first ||= Date.new(2010, 01, 01)
      # days as integer + milliseconds as fraction since the first date
      diff = DateTime.now - @first
      # shift a tenth of a milli up into the integer portion
      decimillis = diff * 24 * 60 * 60 * 10000
      # truncate the fraction
      decimillis.truncate
    end
  end
end

class String
  # Returns a relatively unique value obtained from the specified base value.
  # The suffix is generated by {CaRuby::Uniquifier.qualifier}. Spaces are removed.
  #
  # @example
  #   'Test Name'.uniquify #=> Test_Name_330938800614
  def uniquify
    gsub(' ', '_') + "_#{CaRuby::Uniquifier.qualifier}"
  end
end